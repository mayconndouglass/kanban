generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Project {
    id          String   @id @default(uuid())
    name        String
    description String?
    createdAt   DateTime @default(now()) @map("created_at")

    user  User   @relation(fields: [admin], references: [id])
    admin String

    ProjectUser ProjectUser[]
    Column      Column[]

    @@map("projects")
}

model User {
    id           String @id @default(uuid())
    name         String
    email        String @unique
    passwordHash String @map("password_hash")

    ProjectUser ProjectUser[]
    Project     Project[]
    UserTasks   UserTasks[]

    @@map("users")
}

model ProjectUser {
    user      User    @relation(fields: [userId], references: [id])
    project   Project @relation(fields: [projectId], references: [id])
    userId    String  @map("user_id")
    projectId String  @map("project_id")

    @@id([userId, projectId])
    @@map("project_user")
}

// Ser√° que precisa de uma row chamada order(ordem) ?
model Column {
    id        String   @id @default(uuid())
    name      String
    createdAt DateTime @default(now()) @map("create_at")
    project   Project  @relation(fields: [projectId], references: [id])
    projectId String   @map("project_id")

    Task Task[]

    @@map("columns")
}

model Task {
    id          String   @id @default(uuid())
    name        String
    description String
    createdAt   DateTime @default(now()) @map("create_at")
    dueDate     DateTime @map("due_date")

    column   Column @relation(fields: [columnId], references: [id])
    columnId String @map("column_id")

    UserTasks UserTasks[]

    @@map("tasks")
}

model UserTasks {
    user   User   @relation(fields: [userId], references: [id])
    task   Task   @relation(fields: [taskId], references: [id])
    userId String @map("user_id")
    taskId String @map("task_id")

    @@id([userId, taskId])
    @@map("user_tasks")
}
